- from,to = @search.from_to.try(:split, ",")
- from ||= 1
- to ||= 15

%h1= t("word.find_words")

= simple_form_for :search, url: find_words_dictionary_path, html: { method: :post, id: "scrabble-find-form"} do |f|
  = f.input :chars, input_html: { maxlength: Game.chars_per_move }, label: t("word.chars")

  %table.table.table-condensed.scrabble-find{style: "width: 0px"}
    %thead
      %tr
        - (1..15).each do |pos|
          %th.c{style: "width: 0px"}= pos
    %tbody
      %tr
        - (1..15).each do |pos|
          %td.c
            = f.text_field "ch_#{pos}", maxlength: 1, style: "width: 30px"

  %div{style: "margin-left:30px"}
    = f.text_field :from_to, class: "slider", :"data-slider-min" => 1, :"data-slider-max" => 15, :"data-slider-step" => "1", :"data-slider-value" => "[#{from},#{to}]", :"data-slider-orientation" => "horizontal", :"data-slider-handle" => "triangle", style: "width:740px"

  %p
    = f.submit t("word.find"), class: "btn btn-success"
    = f.button :button, t("word.reset"), type: 'reset', class: 'btn'


- unless @words.empty?
  - results = @words.map do |word|
    - the_word, pos = word.split("@")
    - pts = Dictionary.word_value(the_word, @locale)
    - [the_word, pos, pts]

  .alert.alert-info
    %ul.unstyled.inline
      - results.sort{|x,y| y.last <=> x.last }.each do |word, pos, pts|
        %li
          %a.scrabble-results{data: {word: word, pos: pos.to_i+1, form: "#scrabble-find-form"}}= word
          = pts